module StimulusBuilder
  class Controller
    MODULE_SEPARATOR: String
    IDENTIFIER_SEPARATOR: String

    @controller_name: ::String
    @element: Element

    def initialize: (descriptive controller_name, ElementRepresentable element) -> void

    def method_missing: (::String action_method, ?StimulusBuilder::Element element) -> Array[untyped]
      | (::String action_method, **untyped kargs) -> StimulusBuilder::Handler

    def []: (descriptive event_name) -> ::String

    def []=: (::String selector, Outlet outlet) -> void

    def to_s: () -> String

    def to_str: () -> String

    private def controller_identifier: () -> String
  end
end
